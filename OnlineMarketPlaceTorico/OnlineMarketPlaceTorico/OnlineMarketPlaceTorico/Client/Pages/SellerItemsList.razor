@page "/SellerItems"
@using System.Security.Claims
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProductService service

<div class="ml-4 mt-4">
    <a class="btn btn-success" href="/AddItem">Add Product</a>
    <button class="btn btn-dark" @onclick="@(e=>SetLayout("List"))">List View</button>
    <button class="btn btn-dark" @onclick="@(e=>SetLayout("Grid"))">Grid View</button>
</div>

@if (Layout == "List")
{
    <div class="list-group">
        @foreach (Product item in ItemsRepository.ItemsList)
        {
            <ListItem ListItemValue=@item StateUpdated=@StateHasChanged></ListItem>
        }
    </div>
}
else if (Layout == "Grid")
{
    <div class="container-fluid float-left align-content-center">
        @foreach (Product item in ItemsRepository.ItemsList)
        {
            <GridItem GridItemValue=@item StateUpdated=@StateHasChanged></GridItem>
        }
    </div>
}

@code {
    string Layout { get; set; } = View;
    void SetLayout(string value)
    {
        Layout = value;
        View = value;
    }
    private string sellerEmail;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await SetSellerEmail();
        if(CurrentSellerId==-1)
        {
            CurrentSellerId = await service.GetSellerId(sellerEmail);
        }
        if(ItemsList==null)
        {
            ItemsList = await service.GetProductsListOfSeller(CurrentSellerId);
        }
        if (Categories == null)
        {
            Categories = await service.GetCategoriesList();
        }
    }

    private async Task SetSellerEmail()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        sellerEmail = user.FindFirst(c => c.Type == "preferred_username")?.Value;
    }
    //Seller seller;
    //int 
    //private async Task GetSellerIdOrAddNewOne() =>
    //    await Http.GetFromJsonAsync<Seller>("https://localhost:44390/api/online/getSellerIdOrAddNewOne/seller");
}
